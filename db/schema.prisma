// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           Role     @default(USER)

  coursesCreated  Course[]
  coursesEnrolled CourseMembership[]

  chats    Chat[]
  messages Message[]

  tokens   Token[]
  sessions Session[]
}

model Course {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String   @unique
  description   String
  icon          String
  previewImages String[]
  author        User     @relation(fields: [authorId], references: [id])
  authorId      Int
  hourlyRate    Int

  usersEnrolled CourseMembership[]
}

model CourseMembership {
  id             Int             @id @default(autoincrement())
  user           User            @relation(fields: [userId], references: [id])
  userId         Int
  course         Course          @relation(fields: [courseId], references: [id])
  courseId       Int
  weeklyHours    Int
  weeklySchedule WeeklySession[]
  enrolledAt     DateTime        @default(now())
}

model WeeklySession {
  id                 Int              @id @default(autoincrement())
  day                WeekDay
  startTime          DateTime         @db.Time
  endTime            DateTime         @db.Time
  courseMembershipId Int
  courseMembership   CourseMembership @relation(fields: [courseMembershipId], references: [id])
}

model Chat {
  id       Int       @id @default(autoincrement())
  users    User[]    @relation(references: [id])
  messages Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  chatId Int
  chat   Chat @relation(fields: [chatId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  RESET_PASSWORD
}

enum WeekDay {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}
